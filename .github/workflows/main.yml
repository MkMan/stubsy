name: CI

on:
  push:
    branches:
      - '**'

jobs:
  build:
    name: Build, Test and Release
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          token: ${{ secrets.GH_TOKEN }}

      - uses: pnpm/action-setup@v2.2.2
        with:
          version: 7.6.0

      - name: Setup Node.js environment
        uses: actions/setup-node@v3
        with:
          node-version-file: '.nvmrc'

      - name: Store branch name
        run: echo "BRANCH_NAME=${GITHUB_REF#refs/*/}" >> $GITHUB_ENV

      - name: Get pnpm store directory
        id: pnpm-cache
        run: |
          echo "::set-output name=pnpm_cache_dir::$(pnpm store path)"

      # - uses: actions/cache@v3
      #   name: Setup pnpm cache
      #   with:
      #     path: ${{ steps.pnpm-cache.outputs.pnpm_cache_dir }}
      #     key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
      #     restore-keys: ${{ runner.os }}-pnpm-store-

      - uses: actions/cache@v3
        name: Setup Cypress cache
        with:
          path: ~/.cache/Cypress
          key: cypress-cache-binary-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: cypress-cache-binary

      - name: Install Dependencies
        run: pnpm install

      - name: Check code formatting
        run: pnpm format:check

      - name: Fetch Quality test reporter
        run: |
          curl -L https://codeclimate.com/downloads/test-reporter/test-reporter-latest-linux-amd64 > ./cc-test-reporter
          chmod +x ./cc-test-reporter

      - name: Run Unit Tests
        env:
          CC_TEST_REPORTER_ID: ${{ secrets.CC_TEST_REPORTER_ID }}
          GIT_COMMIT_SHA: ${{ github.sha }}
          GIT_BRANCH: ${{ env.BRANCH_NAME }}
        run: |
          ./cc-test-reporter before-build
          pnpm test:unit
          ./cc-test-reporter after-build

      - name: Run E2E Tests
        run: pnpm test:e2e

      - name: Build project
        run: pnpm build

      - name: Run Semantic Release
        env:
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
          GH_TOKEN: ${{ secrets.GH_TOKEN }}
        run: npx semantic-release
